'''

Created on Thrus 10 Mar 2022
Author: Melisa

This script uses information that was generated by tracking_vector
which creates n_trials files for each session with the nose, ear1, ear2, head  and body positions.
 Creates center of mass file

'''

import os
import src.Alonso.configuration
import pandas as pd
import numpy as np
import pickle
import math
import src.behavioural_analysis_functions as beh_func
from scipy import signal

## select mouse and session to analyze
mouse = 411857

## object positions directory
for session in [1,2,3]:
    current_directory  = os.environ['DATA_DIR_LOCAL'] +f'{mouse}'+'/'
    ## source extracted calcium traces directory
    calcium_directory = os.environ['DATA_DIR_LOCAL'] +f'{mouse}'+'/' + 'data/calcium_activity_day_wise/'
    ## timeline directory
    timeline_file_dir =os.environ['DATA_DIR_LOCAL'] +f'{mouse}'+'/' + 'data/timeline/'

    objects_file_name = current_directory + 'training_sheet_411857.xlsx'
    objects_list_structure = ['condition', 'goal','group','session','drug','subject', 'trial','day', 'loc_1','loc_2']

    object_list = pd.read_excel(objects_file_name)
    object_list = pd.DataFrame(object_list,columns=objects_list_structure)

    #current_object_data = object_list[ object_list.subject == mouse]
    current_object_data =object_list[object_list.session == session]
    objects = ['LR', 'LL', 'UR', 'UL']

    ## behaviour directory
    behaviour_path = os.environ['PROJECT_DIR_LOCAL'] + 'data/compiled_positions/'+f'{mouse}'+'/week'+ f'{session}'+'/'
    ## output directoy
    category_path = os.environ['PROJECT_DIR_LOCAL']  + 'data/center_of_mass/'+f'{mouse}'+'/week'+ f'{session}'+'/'


    timeline_length=[10,10,10,10,2]
    session_trial = []
    session_trial.append(np.arange(1,6))
    session_trial.append(np.arange(6,11))
    session_trial.append(np.arange(11,16))
    session_trial.append(np.arange(16,21))
    session_trial.append(np.arange(21,22))

    day = 0
    for trial_day in [1,6,11,16]:
        print(day)
        ## load calcium activity
        file_name = 'mouse_'+f'{mouse}'+'_session_'+f'{session}'+'_trial_'+f'{trial_day}' +'_v1.4.20.3.0.1.1.0.npy'
        activity = np.load(calcium_directory + file_name)
        ## load timeline
        timeline_file_path = timeline_file_dir + 'mouse_' + f'{mouse}' + '_session_' + f'{session}' + \
                             '_trial_1_v' + f'{1}' + '.4.' + f'{1}' + \
                              '.' + f'{0}' + '_10.pkl'
        timeline_file= open(timeline_file_path,'rb')
        timeline_info = pickle.load(timeline_file)

        timeline = np.zeros(timeline_length[day]+1)
        for i in range(timeline_length[day]):
            timeline[i] = timeline_info[i][1]
        timeline[len(timeline)-1] = activity.shape[1]
        trial_duration = np.diff(timeline)

        ## create vector to save cm
        cm_vector = np.zeros((activity.shape[1],2))

        ## load tracking of behaviour
        for trial in range(len(session_trial[day])):
            beh_file_name = 'mouse_' + f'{mouse}' + '_session_' + f'{session}' + '_trial_' + \
                            f'{session_trial[day][trial]}' + '_likelihood_0.75.npy'
            beh_path = behaviour_path + beh_file_name
            if not os.path.isfile(beh_path):
                print('ERROR: Behaviour file not found:' + beh_path)
            else:
                tracking = np.load(beh_path)

                init_trial = int(timeline[trial * 2])
                end_trial = int(timeline[trial * 2 + 1])
                duration = np.min((tracking.shape[0], end_trial - init_trial))

                cm = np.zeros((tracking.shape[0], 2))
                body_part = 1
                x = tracking[:, body_part * 2]
                y = tracking[:, body_part * 2 + 1]
                x_new, y_new = beh_func.interpolate_positions(x, y)
                cm[:, 0] = signal.medfilt(x_new, 7)
                cm[:, 1] = signal.medfilt(y_new, 7)

                cm_vector[init_trial : init_trial + cm.shape[0],:] = cm

        output_tracking_file = 'mouse_' + f'{mouse}' + '_session_' + f'{session}' + '_day_' + \
                               f'{day + 1}' + '_likelihood_0.75.npy'
        output_tracking_path = category_path + output_tracking_file
        np.save(output_tracking_path,cm_vector)
        day = day+1
